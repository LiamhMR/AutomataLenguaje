<<<<<<<<<<<<<<<<<<<<<<<<<<<LEXER>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
lexer grammar LexerT;

grammar Fantastic;
r  : 'WENA' ID ;         // match keyword hello followed by an identifier

ID : [A-Za-z0-9]+;             // match lower-case identifiers

WS : [ \t\r\n]+ -> skip ; // skip spaces, tabs, newlines

LETRAS: [a-z]+; //LETRAS
DIGITS: [0-9]+; //DIGITO
NUMBER: DIGITS+; //NÚMERO
WORD: LETRAS+; //PALABRA
FLAG: 'DOPE'| 'NOPE' | 0 | 1; //BOOLEAN
SINGLE_STRING: '<' ~('\'')+ '>'; // SIMPLE
DOUBLE_STRING: '<<' ~('"')+ '>>'; // DOBLE
STRING: SINGLE_STRING | DOUBLE_STRING; //Detector de comillas

//OPERADORES
PLUS: '+';
LEFT: '-';
MULT: '*';
FRAC: '%';

//PARÉNTESIS
OPENPAREN : '¿' {self.opened += 1};
CLOSEPAREN : '?' {self.opened -= 1};

BELIKE: 'IGUALITO'| 'NOIGUALITO' |'GRANDESITO'|'CHIQUITO';
AND: 'YY';
OR: 'OO';
COND: AND | OR;
VARIABLE: NUMBER | STRING | FLAG;

//TIPOS DE DATOS
INT: 'NUMERITO';
STRING: 'CADENITA';
BOOLEAN: 'LACUERDADELAVERDADDELAMUJERMARAVILLA'
MATRIX: 'MALLITA';

//OPERACIONES
OPERATION= IF WS | LOOP WS | DECLARE WS;
ALLOPERATIONS= OPERATION | OPERATION ALLOPERATIONS;

//SUMA
SUMA: NUMBER 

//VARIABLE DECLARATION
DECLARE: WORD 'TEDECLARO' TYPESTOKENS;

READ: 'ESCANEAR';
PRINT: 'TATUAR';

EXP: 'POTENCIA';
ROOT: 'RAIZ';
FACT: 'FACTORIAL';

//CONSTANTES
PI: 'PIPI'; //NÚMERO PI
E: 'EUHH' //Profe este es el número de EEEEUHHHHHLEER
LIGHT: 'VELOCIDA';
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<PARSER>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//FUNCIONES 
SUB: "DALE"; //ABRIR UNA FUNCIÓN
ENDSUB: "PARÁ"; //CERRAR UNA FUNCIÓN
RETURN: "SALITE"; //RETURN

//CONDICIONALES
COMPARE: WORD BELIKE WORD | NUMBER BELIKE NUMBER | FLAG BELIKE FLAG;
ITERATECOMPARE: COMPARE | COMPARE COND ITERATECOMPARE;

//IF - RULE
ELSE: "SINO" | "SINO" ITERATECOMPARE ;
IFCONTENT: ALLOPERATIONS | ALLOPERATIONS ELSE IFCONTENT;
IF: "CASO" ITERATECOMPARE "SUCEDE" IFCONTENT "YNAMÁS";

//LOOP
LOOP: "LOOPEAR" ALLOPERATIONS "HASTA" NUMBER;

//MIENTRAS
WHILE: "DURANTE" ITERATECOMPARE "SUCEDE" ALLOPERATIONS "HASTAACÁMIBRO" | "HACER" ALLOPERATIONS "HASTA" ITERATECOMPARE;


